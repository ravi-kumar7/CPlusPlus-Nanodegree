File Input Streams
Creating an Input Stream Object
In C++, you can use the std::ifstream object to handle input file streams. To do this, you will need to include the header file that provides the file streaming classes: <fstream>.

Once the <fstream> header is included, a new input stream object can be declared and initialized using a file path path:

std::ifstream my_file;
my_file.open(path);
Alternatively, the declaration and initialization can be done in a single line as follows:

std::ifstream my_file(path);
C++ ifstream objects can also be used as a boolean to check if the stream has been created successfully. If the stream were to initialize successfully, then the ifstream object would evaluate to true. If there were to be an error opening the file or some other error creating the stream, then the ifstream object would evaluate to false.

Reading Data from the Stream
If the input file stream object has been successfully created, the lines of the input stream can be read using the getline method. In the cell below, a while loop has been added to the previous example to get each line from the stream and print it to the console.

#include <fstream>
#include <iostream>
#include <string>
â€‹
int main() {
    std::ifstream my_file;
    my_file.open("files/1.board");
    if (my_file) {
        std::cout << "The file stream has been created!" << "\n";
        std::string line;
        while (getline(my_file, line)) {
            std::cout << line << "\n";
        }
    }
}

The getline method takes two inputs: the ifstream object and a string to write the line to.

getline returns a boolean false if there are no more lines in the stream to write to the string and returns true otherwise.
